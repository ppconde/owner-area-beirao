@mixin dynamicMQuery($gridVar, $screenName) {
  // If screenName mobile then sets the default CSS
  @if $screenName == "mobile" {
    @content;
  }
  // Otherwise applies the media query  mapping
  @else {
    @media (min-width: #{map-get($gridVar, $screenName)}) {
      @content;
    }
  }
}

//Animation

@mixin animation($delay, $duration, $animation) {
  -webkit-animation-delay: $delay;
  -webkit-animation-duration: $duration;
  -webkit-animation-name: $animation;
  -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  -moz-animation-delay: $delay;
  -moz-animation-duration: $duration;
  -moz-animation-name: $animation;
  -moz-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-fill-mode: forwards; /* this prevents the animation from restarting! */
  animation-play-state: running;
}

@mixin keyframe($animation_name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }

  @-moz-keyframes #{$animation-name} {
    @content;
  }

  @keyframes #{$animation-name} {
    @content;
  }
}
